services:
#  backend:
#    build:
#      context: .
#      dockerfile: ./build/Dockerfile
#    container_name: backend
#    ports:
#      - "8080:${HTTP_APP_PORT:-8080}"
#    environment:
#      SERVER_HTTP_PORT: ${HTTP_APP_PORT:-8080}
#      SERVER_SHUTDOWN_TIMEOUT: ${HTTP_SHUTDOWN_TIMEOUT:-10}
#      LOG_LEVEL: ${LOG_LEVEL:-"DEV"}
#      POSTGRES_HOST: wb-db
#      POSTGRES_PORT: 5435
#      POSTGRES_USERNAME: order_service_user
#      POSTGRES_PASSWORD: Passw0rd
#      POSTGRES_DATABASE: order_db
#      KAFKA_BROKERS_URL: wb-kafka:9092
#      KAFKA_INPUT_TOPIC: orders
#      KAFKA_CONSUMER_AUTO_OFFSET_RESET: earliest
#      KAFKA_CONSUMER_GROUP_ID: wb-cons-group
#    networks:
#      - wb-l0-task
#    restart: unless-stopped

  postgres:
    image: postgres:14
    container_name: wb-db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: passw0rd
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5435:5432"
    volumes:
      - ./containers-data/pgdata:/var/lib/postgresql/data/pgdata
      - ./containers-data/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - wb-l0-task
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  kafka:
    image: apache/kafka:3.7.0
    container_name: wb-kafka
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_NODE_ID: "1"
      KAFKA_PROCESS_ROLES: "controller,broker"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_LISTENERS: "INTERNAL://:19092,EXTERNAL://:9092,CONTROLLER://:9093"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://wb-kafka:19092,EXTERNAL://localhost:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - ./containers-data/kafka-data:/tmp/kraft-combined-logs
    networks:
      - wb-l0-task
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: wb-kafka-ui
    environment:
      KAFKA_CLUSTERS_0_NAME: "local-kraft"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "wb-kafka:19092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: ""
      KAFKA_CLUSTERS_0_KRAFT: "true"
    ports:
      - "8100:8080"
    depends_on:
      - kafka
    networks:
      - wb-l0-task
    restart: unless-stopped

volumes:
  pgdata:
    driver: local

networks:
  wb-l0-task:
    name: wb-l0-task
    driver: bridge